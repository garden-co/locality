classDiagram
    %% Main account and root structure
    JazzAccount --> UserProfile : contains
    JazzAccount --> AccountRoot : contains
    AccountRoot --> OrganizationList : contains
    OrganizationList --> Organization : contains
    
    %% Organization structure
    Organization --> TeamList : contains
    Organization --> LabelList : contains
    Organization --> LiveUpdates : contains
    Organization --> Issue : referenced by
    
    %% Teams and issues
    TeamList --> Team : contains
    Team --> IssueList : contains
    
    %% Issues and related items
    IssueList --> Issue : contains
    Issue --> Issue : parentIssue
    Issue --> IssueList : childIssues
    Issue --> Team : belongs to
    Issue --> UserProfile : assignee
    Issue --> LabelList : has
    Issue --> CommentList : has
    Issue --> AttachmentList : has
    Issue --> ReactionsList : has
    
    %% Comments
    CommentList --> Comment : contains
    Comment --> Issue : parentIssue
    Comment --> Comment : parentComment
    Comment --> ReactionsList : has
    Comment --> AttachmentList : has
    
    %% Supporting entities
    AttachmentList --> Attachment : contains
    LabelList --> Label : contains
    ReactionsList --> ReactionType : contains
    
    %% Class properties
    class JazzAccount {
        profile: UserProfile
        root: AccountRoot
        migrate()
    }
    
    class AccountRoot {
        organizations: OrganizationList
        version: number
    }
    
    class Organization {
        name: string
        slug: string
        teams: TeamList
        labels: LabelList
        liveUpdates: LiveUpdates
        deleted: boolean
        getTeamsForMember()
    }
    
    class Team {
        name: string
        slug: string
        icon: string
        color: string
        issues: IssueList
        deleted: boolean
    }
    
    class Issue {
        identifier: string
        title: string
        description: string
        assignee: UserProfile
        estimate: number
        dueDate: Date
        statusType: StatusType
        priority: PriorityType
        team: Team
        parentIssue: Issue
        childIssues: IssueList
        attachments: AttachmentList
        labels: LabelList
        comments: CommentList
        reactions: ReactionsList
        deleted: boolean
        parentOrganization: Organization
        updateIssueStatus()
        updateIssuePriority()
        updateIssueAssignee()
        addIssueLabel()
        removeIssueLabel()
    }
    
    class UserProfile {
        name: string
        email: string
        avatarUrl: string
    }
    
    class Comment {
        content: string
        parentIssue: Issue
        parentComment: Comment
        reactions: ReactionsList
        attachments: AttachmentList
        deleted: boolean
    }
    
    class Label {
        name: string
        color: string
        deleted: boolean
    }
    
    class Attachment {
        name: string
        file: FileStream
        image: ImageDefinition
        type: string
        deleted: boolean
    }
    
    class IssueList {
        filterByStatus()
        filterByPriority()
        filterByAssignee()
        filterByLabel()
        searchIssues()
        filterIssues()
        groupIssuesByStatus()
    }
    
    class ReactionsList {
    }
    
    class ReactionType {
        thumb-up|thumb-down|laugh|heart|sad|angry|surprised|thinking|wink|clap|fire|fireworks|party
    }
    
    class StatusType {
        backlog|to-do|in-progress|technical-review|completed|paused|archived
    }
    
    class PriorityType {
        no-priority|low|medium|high|urgent
    }